{
   "customers": [
      {
         "get_customer_product_history1.sql": "/workspace/db_artifacts/mysql/queries/customers/get_customer_product_history1.sql",
         "get_customer_product_history1.sql_content": "\nselect * from \n(\nselect \n    c.id,\n    c.f_name, \n    c.l_name,\n    cp.product_id,\n    cp.purchase_dt,\n    cp.expiration_dt,\n    cp.created_dt\nfrom \n    customer_info c\njoin \n    customer_product cp\non \n    c.id = cp.customer_id\nUNION ALL\nselect \n    c.id,\n    c.f_name, \n    c.l_name,\n    cp.product_id,\n    cp.purchase_dt,\n    cp.expiration_dt,\n    cp.created_dt\nfrom \n    customer_info c\njoin \n    customer_product_history cp\non \n    c.id = cp.customer_id\n)a order by id asc, purchase_dt desc\n\n"
      },
      {
         "populate_customer_product_history.sql": "/workspace/db_artifacts/mysql/queries/customers/populate_customer_product_history.sql",
         "populate_customer_product_history.sql_content": "INSERT INTO customers.customer_product_history\n    (product_id, customer_id, product_type_desc, purchase_dt, expiration_dt, created_by, created_dt, updated_by, updated_dt)\nSELECT\n    product_id,\n    customer_id,\n    product_type_desc,\n    (expiration_dt - INTERVAL (DATEDIFF(expiration_dt, purchase_dt) + 1) DAY) AS purchase_dt,\n    (purchase_dt) AS expiration_dt,\n    created_by,\n    created_dt,\n    updated_by,\n    updated_dt\nFROM\n    customers.customer_product\nWHERE\n    RAND() <= 0.8; -- Select 80% of records randomly    \n\n"
      },
      {
         "get_customer_products.sql": "/workspace/db_artifacts/mysql/queries/customers/get_customer_products.sql",
         "get_customer_products.sql_content": "select * from customer_info limit 10;\nselect * from customer_product limit 10 ;\nselect * from customer_product_history limit 10 "
      },
      {
         "get_customer_product_history.sql": "/workspace/db_artifacts/mysql/queries/customers/get_customer_product_history.sql",
         "get_customer_product_history.sql_content": "-- select * from customer_info limit 10;\n-- select * from customer_product limit 10;\n-- select * from customer_product_history limit 10;\n\n-- DROP TEMPORARY TABLE IF EXISTS tmp_product_history;\n\n-- CREATE TEMPORARY TABLE IF NOT EXISTS tmp_product_history as \n-- (\nselect \n    c.id,\n    c.f_name, \n    c.l_name,\n    cp.product_id,\n    cp.purchase_dt,\n    cp.expiration_dt,\n    cp.created_dt\nfrom \n    customer_info c\njoin \n    customer_product cp\non \n    c.id = cp.customer_id\nUNION ALL\nselect \n    c.id,\n    c.f_name, \n    c.l_name,\n    cp.product_id,\n    cp.purchase_dt,\n    cp.expiration_dt,\n    cp.created_dt\nfrom \n    customer_info c\njoin \n    customer_product_history cp\non \n    c.id = cp.customer_id\n-- );\n\n--select * from tmp_product_history ORDER BY id, product_id DESC, purchase_dt ASC;"
      },
      {
         "look_at_tables.sql": "/workspace/db_artifacts/mysql/queries/customers/look_at_tables.sql",
         "look_at_tables.sql_content": "-- select * from customer_info limit 10;\n-- select * from customer_product limit 10;\n-- select * from customer_product_history limit 10;\n\nDROP TEMPORARY TABLE IF EXISTS tmp_product_history;\n\nCREATE TEMPORARY TABLE IF NOT EXISTS tmp_product_history as \n(\nselect \n    c.id,\n    c.f_name, \n    c.l_name,\n    cp.product_id,\n    cp.purchase_dt,\n    cp.expiration_dt,\n    cp.created_dt\nfrom \n    customer_info c\njoin \n    customer_product cp\non \n    c.id = cp.customer_id\nUNION ALL\nselect \n    c.id,\n    c.f_name, \n    c.l_name,\n    cp.product_id,\n    cp.purchase_dt,\n    cp.expiration_dt,\n    cp.created_dt\nfrom \n    customer_info c\njoin \n    customer_product_history cp\non \n    c.id = cp.customer_id\n);\n\nselect * from tmp_product_history ORDER BY id, product_id DESC, purchase_dt ASC;"
      }
   ]
}