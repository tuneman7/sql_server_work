from sqlalchemy import create_engine, Column, Integer, String, DateTime, Numeric
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base
#import the db_base libraries for all connections we have
from libraries.db_base import db_base

customers_db = db_base("customers","mysql")
products_db = db_base("products","mssql")
finance_db = db_base("finance","postsql")


DATABASE_URL = "mysql+mysqlconnector://root:${mysql_pw}@${mysql_svr}/customers"

# SQLAlchemy
engine = create_engine(DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Create a base class for SQLAlchemy models
Base = declarative_base()

# Dependency to get the database session
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()
