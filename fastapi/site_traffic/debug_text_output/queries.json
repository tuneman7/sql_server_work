{
   "finance": [
      {
         "populate_fin_distro_channel.sql": "/data/school/MIDS/sql_server_work/fastapi/site_traffic/db_artifacts/postsql/queries/finance/populate_fin_distro_channel.sql",
         "populate_fin_distro_channel.sql_content": "\\c finance\n-- Insert data into fin_distro_channel table with abbreviated chnl_cd values\nINSERT INTO fin_distro_channel (chnl_cd, channel_desc, created_by, updated_by)\nVALUES\n    ('AIR', 'Airlines', 'John Doe', 'John Doe'),\n    ('TH', 'Theatrical', 'Jane Smith', 'Jane Smith'),\n    ('STREAM', 'Streaming', 'Alice Johnson', 'Alice Johnson'),\n    ('STREAMRTL', 'Streaming Rental', 'Bob Williams', 'Bob Williams'),\n    ('STREAMSUB', 'Streaming Subscription', 'Charlie Davis', 'Charlie Davis'),\n    ('MOBILE', 'Mobile', 'Eve Wilson', 'Eve Wilson'),\n    ('EDU', 'Education', 'Grace Lee', 'Grace Lee'),\n    ('MPUB', 'Music Publishing', 'David Brown', 'David Brown'),\n    ('HVID', 'Home Video', 'Frank Miller', 'Frank Miller'),\n    ('HVIDR', 'Home Video Rentals', 'Gina Anderson', 'Gina Anderson'),\n    ('EVNT', 'Events', 'Henry White', 'Henry White'),\n    ('HVIDDVD', 'Home Video DVD', 'Ivy Clark', 'Ivy Clark'),\n    ('CABLE', 'Cable TV Networks', 'John Doe', 'John Doe'), -- Additional Channels\n    ('VOD', 'Video-on-Demand (VOD) Services', 'Jane Smith', 'Jane Smith'),\n    ('GAMES', 'Video Game Consoles', 'Alice Johnson', 'Alice Johnson'),\n    ('PODCAST', 'Podcasting Platforms', 'Bob Williams', 'Bob Williams'),\n    ('LIVESTREAM', 'Live Streaming Platforms', 'Charlie Davis', 'Charlie Davis'),\n    ('VR', 'Virtual Reality (VR) Platforms', 'Eve Wilson', 'Eve Wilson'),\n    ('FILMFEST', 'Film Festivals', 'Grace Lee', 'Grace Lee'),\n    ('DIGSIGNAGE', 'Digital Signage Networks', 'David Brown', 'David Brown'),\n    ('EDUINST', 'Educational Institutions', 'Frank Miller', 'Frank Miller'),\n    ('CRUISE', 'Cruise Lines', 'Gina Anderson', 'Gina Anderson'),\n    ('THEMEPARK', 'Theme Parks', 'Henry White', 'Henry White'),\n    ('INTL', 'International Distribution', 'Ivy Clark', 'Ivy Clark'),\n    ('SPORTS', 'Sports Networks', 'John Doe', 'John Doe'),\n    ('RETAIL', 'Retail Stores', 'Jane Smith', 'Jane Smith'),\n    ('AIRPORT', 'Airports and Airlines', 'Alice Johnson', 'Alice Johnson'),\n    ('OUTDOOR', 'Outdoor Events', 'Bob Williams', 'Bob Williams'),\n    ('MUSEUM', 'Museums and Cultural Institutions', 'Charlie Davis', 'Charlie Davis'),\n    ('SOCIAL', 'Social Media Platforms', 'Eve Wilson', 'Eve Wilson'),\n    ('WEBSERIES', 'Web Series Platforms', 'Grace Lee', 'Grace Lee'),\n    ('AGGREGATOR', 'Streaming Aggregators', 'David Brown', 'David Brown');\n"
      },
      {
         "populate_fin_distro_channel_group.sql": "/data/school/MIDS/sql_server_work/fastapi/site_traffic/db_artifacts/postsql/queries/finance/populate_fin_distro_channel_group.sql",
         "populate_fin_distro_channel_group.sql_content": "\\c finance\n-- Insert data into fin_distro_channel_group based on fin_distro_channel's id\n-- Airlines and Travel\nINSERT INTO fin_distro_channel_group (group_desc, fin_distro_channel_id, created_by, updated_by)\nVALUES ('Airlines and Travel', 1, 'John Doe', 'John Doe');\n\n-- Streaming Services\nINSERT INTO fin_distro_channel_group (group_desc, fin_distro_channel_id, created_by, updated_by)\nVALUES ('Streaming Services', 3, 'Alice Johnson', 'Alice Johnson');\n\n-- Mobile and Education\nINSERT INTO fin_distro_channel_group (group_desc, fin_distro_channel_id, created_by, updated_by)\nVALUES ('Mobile and Education', 6, 'Eve Wilson', 'Eve Wilson'),\n       ('Mobile and Education', 7, 'Eve Wilson', 'Eve Wilson');\n\n-- Music and Home Video\nINSERT INTO fin_distro_channel_group (group_desc, fin_distro_channel_id, created_by, updated_by)\nVALUES ('Music and Home Video', 8, 'David Brown', 'David Brown'),\n       ('Music and Home Video', 9, 'David Brown', 'David Brown'),\n       ('Music and Home Video', 10, 'David Brown', 'David Brown'),\n       ('Music and Home Video', 11, 'David Brown', 'David Brown'),\n       ('Music and Home Video', 12, 'David Brown', 'David Brown');\n\n-- Events and Entertainment\nINSERT INTO fin_distro_channel_group (group_desc, fin_distro_channel_id, created_by, updated_by)\nVALUES ('Events and Entertainment', 13, 'Henry White', 'Henry White'),\n       ('Events and Entertainment', 14, 'Henry White', 'Henry White'),\n       ('Events and Entertainment', 15, 'Henry White', 'Henry White'),\n       ('Events and Entertainment', 16, 'Henry White', 'Henry White'),\n       ('Events and Entertainment', 17, 'Henry White', 'Henry White'),\n       ('Events and Entertainment', 18, 'Henry White', 'Henry White'),\n       ('Events and Entertainment', 19, 'Henry White', 'Henry White');\n\n-- Additional Channels\nINSERT INTO fin_distro_channel_group (group_desc, fin_distro_channel_id, created_by, updated_by)\nVALUES ('Additional Channels', 28, 'John Doe', 'John Doe'),\n       ('Additional Channels', 29, 'Jane Smith', 'Jane Smith'),\n       ('Additional Channels', 30, 'Alice Johnson', 'Alice Johnson'),\n       ('Additional Channels', 31, 'Bob Williams', 'Bob Williams'),\n       ('Additional Channels', 32, 'Charlie Davis', 'Charlie Davis');\n\n"
      },
      {
         "get_population_and_state_from_geo.sql": "/data/school/MIDS/sql_server_work/fastapi/site_traffic/db_artifacts/postsql/queries/finance/get_population_and_state_from_geo.sql",
         "get_population_and_state_from_geo.sql_content": "SELECT gg.postalcode, gcp.city_name, gcp.population as city_population, gzp.population as zip_population, zip2state.province as province\nFROM geo_geography gg\nINNER JOIN geo_postalcode_to_county_state zip2state\n    on zip2state.postalcode=gg.postalcode\nINNER JOIN geo_city_population gcp ON gg.location_name = gcp.city_name\nINNER JOIN geo_population_by_postalcode gzp on gg.postalcode = gzp.postalcode\nORDER BY gcp.population DESC;\n"
      },
      {
         "populate_geo_city_population.sql": "/data/school/MIDS/sql_server_work/fastapi/site_traffic/db_artifacts/postsql/queries/finance/populate_geo_city_population.sql",
         "populate_geo_city_population.sql_content": "\\c finance\nINSERT INTO geo_city_population (city_name, population)\nSELECT\n    g.location_name AS city_name,\n    SUM(p.population) AS population\nFROM\n    geo_geography g\nJOIN\n    geo_population_by_postalcode p\nON\n    g.postalcode = p.postalcode\nGROUP BY\n    g.location_name;\n"
      },
      {
         "get_product_totals.sql": "/data/school/MIDS/sql_server_work/fastapi/site_traffic/db_artifacts/postsql/queries/finance/get_product_totals.sql",
         "get_product_totals.sql_content": "\tselect SUM(amt_usd) as product_total,\n\tproduct_id\n\tfrom public.fin_account_activity\n\tgroup by product_id\n\torder by sum desc;\n"
      }
   ]
}